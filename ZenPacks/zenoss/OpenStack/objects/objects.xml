<?xml version="1.0"?>
<objects>
<!-- ('', 'zport', 'dmd', 'Devices', 'OpenStack') -->
<object id='/zport/dmd/Devices/OpenStack' module='Products.ZenModel.DeviceClass' class='DeviceClass'>
<property id='zendoc' type='string'>
OpenStack Endpoints
</property>
<property type="string" id="description" mode="w" >
OpenStack Endpoints
</property>
<property visible="True" type="lines" id="zCollectorPlugins" >
['zenoss.OpenStack']
</property>
<property visible="True" type="boolean" id="zSnmpMonitorIgnore" >
True
</property>
<property visible="True" type="lines" id="zDeviceTemplates" >
['OpenStackEndpoint']
</property>
<property visible="True" type="string" id="zPythonClass" >
ZenPacks.zenoss.OpenStack.Endpoint
</property>
<property visible="True" type="float" id="zCommandCommandTimeout" >
240.0
</property>
<tomanycont id='rrdTemplates'>
<object id='OpenStackEndpoint' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.Device
</property>
<tomanycont id='datasources'>
<object id='openstack' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
4
</property>
<property type="string" id="commandTemplate" mode="w" >
poll_openstack.py '${here/zOpenStackAuthUrl}' '${here/zCommandUsername}' '${here/zCommandPassword}'
</property>
<property type="int" id="cycletime" mode="w" >
300
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.zenoss.OpenStack.parsers.endpoint
</property>
<tomanycont id='datapoints'>
<object id='flavorTotalCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='imageActiveCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='imageFailedCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='imageOtherCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='imagePreparingCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='imageQueuedCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='imageSavingCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='imageTotalCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='imageUnknownCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='serverActiveCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='serverBuildCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='serverDeleteIpCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='serverHardRebootCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='serverOtherCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='serverPasswordCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='serverPrepResizeCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='serverQueueResizeCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='serverRebootCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='serverRebuildCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='serverRescueCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='serverResizeCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='serverSuspendedCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='serverTotalCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='serverUnknownCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='serverVerifyResizeCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='Flavors' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
count
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
2
</property>
<tomanycont id='graphPoints'>
<object id='Total' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="string" id="color" mode="w" >
000000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
2
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_flavorTotalCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Images' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
count
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
1
</property>
<tomanycont id='graphPoints'>
<object id='Active' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_imageActiveCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Failed' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
5
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_imageFailedCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Other' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
7
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_imageOtherCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Preparing' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
3
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_imagePreparingCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Queued' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
4
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_imageQueuedCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Saving' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_imageSavingCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Total' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="string" id="color" mode="w" >
000000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
2
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_imageTotalCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Unknown' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
6
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_imageUnknownCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Servers' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
count
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<tomanycont id='graphPoints'>
<object id='Active' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverActiveCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Build' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverBuildCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Delete IP' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
13
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverDeleteIpCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Hard Reboot' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
12
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverHardRebootCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Other' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
15
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverOtherCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Password' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
9
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverPasswordCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Prep Resize' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
6
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverPrepResizeCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Queue Resize' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
5
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverQueueResizeCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Reboot' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
11
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverRebootCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Rebuild' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
3
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverRebuildCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Rescue' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
10
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverRescueCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Resize' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
7
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverResizeCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Suspended' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
4
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverSuspendedCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Total' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="string" id="color" mode="w" >
000000
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
2
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverTotalCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Unknown' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
14
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverUnknownCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Verify Resize' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
8
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
True
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverVerifyResizeCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Events', 'Status', 'Image') -->
<object id='/zport/dmd/Events/Status/Image' module='Products.ZenEvents.EventClass' class='EventClass'>
<tomanycont id='instances'>
<object id='openstackImageStatus' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
if device and evt.component:
    image = device.images._getOb(evt.component, None)
    if image:
        if evt.imageStatus != image.imageStatus:
            image.serverStatus = evt.imageStatus
            txnCommit()
</property>
<property type="string" id="eventClassKey" mode="w" >
openstackImageStatus
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
<property type="string" id="example" mode="w" >
image status is FAILED
</property>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Events', 'Status', 'VM') -->
<object id='/zport/dmd/Events/Status/VM' module='Products.ZenEvents.EventClass' class='EventClass'>
<tomanycont id='instances'>
<object id='openstackServerStatus' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
if device and evt.component:
    server = device.servers._getOb(evt.component, None)
    if server:
        if evt.serverStatus != server.serverStatus:
            server.serverStatus = evt.serverStatus
            txnCommit()
</property>
<property type="string" id="eventClassKey" mode="w" >
openstackServerStatus
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
<property type="string" id="example" mode="w" >
server status is RESCUE
</property>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Events', 'Status', 'instances', 'openStackFailure') -->
<object id='/zport/dmd/Events/Status/instances/openStackFailure' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
openStackFailure
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
<property type="string" id="example" mode="w" >
OpenStack failure: reason
</property>
<property visible="True" type="int" id="zEventSeverity" >
5
</property>
</object>
<!-- ('', 'zport', 'dmd', 'Events', 'Status', 'instances', 'openStackRestored') -->
<object id='/zport/dmd/Events/Status/instances/openStackRestored' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
openStackRestored
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
<property type="string" id="example" mode="w" >
OpenStack connectivity restored
</property>
<property visible="True" type="int" id="zEventSeverity" >
0
</property>
</object>
<!-- ('', 'zport', 'dmd', 'Processes', 'OpenStack') -->
<object id='/zport/dmd/Processes/OpenStack' module='Products.ZenModel.OSProcessOrganizer' class='OSProcessOrganizer'>
<property id='zendoc' type='string'>
Open source software for building private and public clouds.

http://openstack.org/
</property>
<property type="text" id="description" mode="w" >
Open source software for building private and public clouds.

http://openstack.org/
</property>
<object id='Nova' module='Products.ZenModel.OSProcessOrganizer' class='OSProcessOrganizer'>
<property id='zendoc' type='string'>
Nova is a cloud computing fabric controller, the main part of an IaaS system. Individuals and organizations can use Nova to host and manage their own cloud computing systems. Nova originated as a project out of NASA Ames Research Laboratory.

http://nova.openstack.org/
</property>
<property type="text" id="description" mode="w" >
Nova is a cloud computing fabric controller, the main part of an IaaS system. Individuals and organizations can use Nova to host and manage their own cloud computing systems. Nova originated as a project out of NASA Ames Research Laboratory.

http://nova.openstack.org/
</property>
<tomanycont id='osProcessClasses'>
<object id='nova-api' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property id='zendoc' type='string'>
OpenStack Compute - Nova - API frontend
</property>
<property type="string" id="name" mode="w" >
nova-api
</property>
<property type="string" id="regex" mode="w" >
bin/nova-api
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="text" id="description" mode="w" >
OpenStack Compute - Nova - API frontend
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
<object id='nova-compute' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property id='zendoc' type='string'>
OpenStack Compute - Nova - compute node
</property>
<property type="string" id="name" mode="w" >
nova-compute
</property>
<property type="string" id="regex" mode="w" >
bin/nova-compute
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="text" id="description" mode="w" >
OpenStack Compute - Nova - compute node
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
<object id='nova-network' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property id='zendoc' type='string'>
OpenStack Compute - Nova - Network thingamajig
</property>
<property type="string" id="name" mode="w" >
nova-network
</property>
<property type="string" id="regex" mode="w" >
bin/nova-network
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="text" id="description" mode="w" >
OpenStack Compute - Nova - Network thingamajig
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
<object id='nova-objectstore' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property id='zendoc' type='string'>
OpenStack Compute - Nova - object store
</property>
<property type="string" id="name" mode="w" >
nova-objectstore
</property>
<property type="string" id="regex" mode="w" >
bin/nova-objectstore
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="text" id="description" mode="w" >
OpenStack Compute - Nova - object store
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
<object id='nova-scheduler' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property id='zendoc' type='string'>
OpenStack Compute - Nova - Scheduler
</property>
<property type="string" id="name" mode="w" >
nova-scheduler
</property>
<property type="string" id="regex" mode="w" >
bin/nova-scheduler
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="text" id="description" mode="w" >
OpenStack Compute - Nova - Scheduler
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
<object id='nova-volume' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property id='zendoc' type='string'>
OpenStack Compute - Nova - storage
</property>
<property type="string" id="name" mode="w" >
nova-volume
</property>
<property type="string" id="regex" mode="w" >
bin/nova-volume
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="text" id="description" mode="w" >
OpenStack Compute - Nova - storage
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='Glance' module='Products.ZenModel.OSProcessOrganizer' class='OSProcessOrganizer'>
<property id='zendoc' type='string'>
The Glance project provides services for discovering, registering, and retrieving virtual machine images. Glance has a RESTful API that allows querying of VM image metadata as well as retrieval of the actual image.

http://glance.openstack.org/
</property>
<property type="text" id="description" mode="w" >
The Glance project provides services for discovering, registering, and retrieving virtual machine images. Glance has a RESTful API that allows querying of VM image metadata as well as retrieval of the actual image.

http://glance.openstack.org/
</property>
<tomanycont id='osProcessClasses'>
<object id='glance-api' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property id='zendoc' type='string'>
OpenStack Image - Glance - API Server
</property>
<property type="string" id="name" mode="w" >
glance-api
</property>
<property type="string" id="regex" mode="w" >
bin/glance-api
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="text" id="description" mode="w" >
OpenStack Image - Glance - API Server
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
<object id='glance-registry' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property id='zendoc' type='string'>
OpenStack Image - Glance - Registry Server
</property>
<property type="string" id="name" mode="w" >
glance-registry
</property>
<property type="string" id="regex" mode="w" >
bin/glance-registry
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="text" id="description" mode="w" >
OpenStack Image - Glance - Registry Server
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
<object id='Swift' module='Products.ZenModel.OSProcessOrganizer' class='OSProcessOrganizer'>
<property id='zendoc' type='string'>
Swift is a highly available, distributed, eventually consistent object/blob store. Organizations can use Swift to store lots of data efficiently, safely, and cheaply.

http://swift.openstack.org/
</property>
<property type="text" id="description" mode="w" >
Swift is a highly available, distributed, eventually consistent object/blob store. Organizations can use Swift to store lots of data efficiently, safely, and cheaply.

http://swift.openstack.org/
</property>
<tomanycont id='osProcessClasses'>
<object id='swift-account-auditor' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property id='zendoc' type='string'>
Account auditor.
</property>
<property type="string" id="name" mode="w" >
swift-account-auditor
</property>
<property type="string" id="regex" mode="w" >
bin/swift-account-auditor
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="text" id="description" mode="w" >
Account auditor.
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
<object id='swift-account-reaper' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property id='zendoc' type='string'>
Account reaper.
</property>
<property type="string" id="name" mode="w" >
swift-account-reaper
</property>
<property type="string" id="regex" mode="w" >
bin/swift-account-reaper
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="text" id="description" mode="w" >
Account reaper.
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
<object id='swift-account-replicator' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property id='zendoc' type='string'>
Account replicator.
</property>
<property type="string" id="name" mode="w" >
swift-account-replicator
</property>
<property type="string" id="regex" mode="w" >
bin/swift-account-replicator
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="text" id="description" mode="w" >
Account replicator.
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
<object id='swift-account-server' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property id='zendoc' type='string'>
WSGI controller for the account server.
</property>
<property type="string" id="name" mode="w" >
swift-account-server
</property>
<property type="string" id="regex" mode="w" >
bin/swift-account-server
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="text" id="description" mode="w" >
WSGI controller for the account server.
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
<object id='swift-container-auditor' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property id='zendoc' type='string'>
Container auditor.
</property>
<property type="string" id="name" mode="w" >
swift-container-auditor
</property>
<property type="string" id="regex" mode="w" >
bin/swift-container-auditor
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="text" id="description" mode="w" >
Container auditor.
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
<object id='swift-container-replicator' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property id='zendoc' type='string'>
Container replicator.
</property>
<property type="string" id="name" mode="w" >
swift-container-replicator
</property>
<property type="string" id="regex" mode="w" >
bin/swift-container-replicator
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="text" id="description" mode="w" >
Container replicator.
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
<object id='swift-container-server' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property id='zendoc' type='string'>
WSGI Controller for the container server.
</property>
<property type="string" id="name" mode="w" >
swift-container-server
</property>
<property type="string" id="regex" mode="w" >
bin/swift-container-server
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="text" id="description" mode="w" >
WSGI Controller for the container server.
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
<object id='swift-container-sync' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property id='zendoc' type='string'>
Container synchronizer.
</property>
<property type="string" id="name" mode="w" >
swift-container-sync
</property>
<property type="string" id="regex" mode="w" >
bin/swift-container-sync
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="text" id="description" mode="w" >
Container synchronizer.
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
<object id='swift-container-updater' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property id='zendoc' type='string'>
Container updater.
</property>
<property type="string" id="name" mode="w" >
swift-container-updater
</property>
<property type="string" id="regex" mode="w" >
bin/swift-container-updater
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="text" id="description" mode="w" >
Container updater.
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
<object id='swift-object-auditor' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property id='zendoc' type='string'>
Object auditor.
</property>
<property type="string" id="name" mode="w" >
swift-object-auditor
</property>
<property type="string" id="regex" mode="w" >
bin/swift-object-auditor
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="text" id="description" mode="w" >
Object auditor.
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
<object id='swift-object-replicator' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property id='zendoc' type='string'>
Object replicator.
</property>
<property type="string" id="name" mode="w" >
swift-object-replicator
</property>
<property type="string" id="regex" mode="w" >
bin/swift-object-replicator
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="text" id="description" mode="w" >
Object replicator.
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
<object id='swift-object-server' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property id='zendoc' type='string'>
Object Server for Swift
</property>
<property type="string" id="name" mode="w" >
swift-object-server
</property>
<property type="string" id="regex" mode="w" >
bin/swift-object-server
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="text" id="description" mode="w" >
Object Server for Swift
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
<object id='swift-object-updater' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property id='zendoc' type='string'>
Object updater.
</property>
<property type="string" id="name" mode="w" >
swift-object-updater
</property>
<property type="string" id="regex" mode="w" >
bin/swift-object-updater
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="text" id="description" mode="w" >
Object updater.
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
<object id='swift-proxy-server' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property id='zendoc' type='string'>
WSGI controller for container, account and object requests.
</property>
<property type="string" id="name" mode="w" >
swift-proxy-server
</property>
<property type="string" id="regex" mode="w" >
bin/swift-proxy-server
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="text" id="description" mode="w" >
WSGI controller for container, account and object requests.
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
</tomanycont>
</object>
</object>
</objects>
